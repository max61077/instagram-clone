[{"D:\\Web Application\\Instagram-clone\\server\\client\\src\\App.js":"1","D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\SignUp.js":"2","D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\UserProfile.js":"3","D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\SignIn.js":"4","D:\\Web Application\\Instagram-clone\\server\\client\\src\\reportWebVitals.js":"5","D:\\Web Application\\Instagram-clone\\server\\client\\src\\index.js":"6","D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\Navbar.js":"7","D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\Profile.js":"8","D:\\Web Application\\Instagram-clone\\server\\client\\src\\reducers\\userReducer.js":"9","D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\CreatePost.js":"10","D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\Home.js":"11","D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\Reset.js":"12","D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\Newpassword.js":"13"},{"size":1942,"mtime":1608726037658,"results":"14","hashOfConfig":"15"},{"size":3655,"mtime":1608229492559,"results":"16","hashOfConfig":"15"},{"size":4346,"mtime":1608716562040,"results":"17","hashOfConfig":"15"},{"size":2361,"mtime":1608726002721,"results":"18","hashOfConfig":"15"},{"size":362,"mtime":1607075785148,"results":"19","hashOfConfig":"15"},{"size":500,"mtime":1607075785148,"results":"20","hashOfConfig":"15"},{"size":4160,"mtime":1608793826998,"results":"21","hashOfConfig":"15"},{"size":4701,"mtime":1608746820910,"results":"22","hashOfConfig":"15"},{"size":524,"mtime":1608368058597,"results":"23","hashOfConfig":"15"},{"size":3042,"mtime":1608744440057,"results":"24","hashOfConfig":"15"},{"size":6340,"mtime":1608725989369,"results":"25","hashOfConfig":"15"},{"size":1660,"mtime":1608725909364,"results":"26","hashOfConfig":"15"},{"size":1561,"mtime":1608623327426,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"120xj8j",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\Web Application\\Instagram-clone\\server\\client\\src\\App.js",["61"],"import React, {useEffect, createContext, useReducer, useContext} from 'react';\nimport './App.css';\n\nimport Navbar from './components/Navbar';\nimport Home from './components/screens/Home';\nimport SignIn from './components/screens/SignIn';\nimport Profile from './components/screens/Profile';\nimport SignUp from './components/screens/SignUp';\nimport CreatePost from './components/screens/CreatePost';\nimport UserProfile from './components/screens/UserProfile';\nimport Reset from './components/screens/Reset'\nimport Newpassword from './components/screens/Newpassword'\nimport {BrowserRouter, Route, useHistory} from 'react-router-dom';\nimport {reducer, initialState} from './reducers/userReducer'\n\nexport const UserContext = createContext()\n\nconst Routing = () => {\n\n  const history = useHistory()\n  const {dispatch} = useContext(UserContext)\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'))\n    if(user){\n      dispatch({type: \"USER\", payload: user})\n    }\n    else if(!history.location.pathname.startsWith('/reset'))\n      history.push('/signin')\n  }, [])\n  return(\n    <>\n      <Route exact path='/'>\n        <Home/>\n      </Route>\n      <Route path='/create'>\n        <CreatePost/>\n      </Route>\n      <Route path='/signin'>\n        <SignIn/>\n      </Route>\n      <Route exact path='/profile'>\n        <Profile/>\n      </Route>\n      <Route path='/signup'>\n        <SignUp/>\n      </Route>\n      <Route path='/profile/:userid'>\n        <UserProfile/>\n      </Route>\n      <Route exact path='/reset'>\n        <Reset/>\n      </Route>\n      <Route path='/reset/:token'>\n        <Newpassword/>\n      </Route>\n    </>\n  )\n}\n\nconst App = () => {\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <UserContext.Provider value={{state, dispatch}}>\n        <BrowserRouter>\n          <Navbar/>\n          <Routing/>\n        </BrowserRouter>\n    </UserContext.Provider>\n  )\n}\n\nexport default App\n",["62","63"],"D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\SignUp.js",["64"],"import React, {useState, useEffect} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nimport M from 'materialize-css'\r\n\r\nconst SignUp = () => {\r\n    const history = useHistory()\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [url, setUrl] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        if(url)\r\n            uploadFields()\r\n    }, [url])\r\n\r\n    const uploadFields = () => {\r\n        if(!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)){\r\n            M.toast({html: \"Invalid Email\", classes: \"#e53935 red darken-1\"})\r\n            return\r\n        }\r\n        fetch('/signup', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic: url\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            if(data.error)\r\n                M.toast({html: data.error, classes:\"#e53935 red darken-1\"})\r\n            else{\r\n                M.toast({html: data.message, classes:\"#43a047 green darken-1\"})\r\n                history.push('/signin')\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const postData = () => {\r\n        if(image)\r\n            uploadPic()\r\n        else\r\n            uploadFields()\r\n    }\r\n\r\n    const uploadPic = () => {\r\n        const data = new FormData()\r\n\r\n        data.append('file', image)\r\n        data.append('upload_preset', 'insta-clone')\r\n        data.append('cloud_name', 'max12')\r\n        fetch('https://api.cloudinary.com/v1_1/max12/image/upload', {\r\n            method: 'post',\r\n            body: data\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='loginCard'>\r\n            <div className='auth-card'>\r\n                <h2>Instagram</h2>\r\n                <input\r\n                type='text'\r\n                placeholder=\"Name\"\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}\r\n                />\r\n                <input\r\n                type='text'\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n                />\r\n                <input\r\n                type='password'\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                />\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn\">\r\n                        <span>Upload Profile Pic</span>\r\n                        <input \r\n                        type=\"file\"\r\n                        onChange={e => setImage(e.target.files[0])}\r\n                        />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\"/>\r\n                    </div>\r\n                </div>\r\n                <button onClick={() => postData()} className='btn waves-effect waves-light #ff8a80 red accent-2'>SignUp</button>\r\n                <h6>Already have an account ? <Link to='/signin'>SignIn</Link></h6>\r\n            </div>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\UserProfile.js",["65"],"import React, {useState, useEffect, useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst UserProfile = () => {\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const [profile, setProfile] = useState(null)\r\n    const [following, setFollowing] = useState(false)\r\n    const {userid} = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch(`/user/${userid}`, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem('jwt')\r\n            }\r\n        }).then(res => res.json())\r\n        .then(res => {\r\n            setFollowing(res.user.followers.includes(JSON.parse(localStorage.getItem('user'))._id))\r\n            setProfile(res)\r\n        })\r\n    }, [])\r\n\r\n    const followUser = () => {\r\n        fetch('/follow', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: \"Bearer \" + localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                followId: userid\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            dispatch({type: 'UPDATE', payload: {following: data.following, followers: data.followers}})\r\n            localStorage.setItem('user', JSON.stringify(data))\r\n\r\n            setProfile(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    user: {\r\n                        ...prevState.user,\r\n                        followers: [...prevState.user.followers, data._id]\r\n                    }\r\n                }\r\n            })\r\n            setFollowing(true)\r\n        })\r\n    }\r\n\r\n    const unfollowUser = () => {\r\n        fetch('/unfollow', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: \"Bearer \" + localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId: userid\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            dispatch({type: 'UPDATE', payload: {following: data.following, followers: data.followers}})\r\n            localStorage.setItem('user', JSON.stringify(data))\r\n\r\n            setProfile(prevState => {\r\n                const newFollower = prevState.user.followers.filter(user => user !== data._id)\r\n                return {\r\n                    ...prevState,\r\n                    user: {\r\n                        ...prevState.user,\r\n                        followers: newFollower  \r\n                    }\r\n                }\r\n            })\r\n            setFollowing(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {!profile ? <h2>Loading....</h2>\r\n        :\r\n        <div className=\"profile\">\r\n            <div className=\"userProfile\">\r\n                <div className=\"profilepic\">\r\n                    <img alt={\"dp\"} src={profile.user.pic} \r\n                     />\r\n                </div>\r\n                <div className=\"profileDetails\">\r\n                    <h4>{profile.user.name}</h4>\r\n                    {   profile.user._id !== state._id?\r\n                        !following\r\n                        ?\r\n                        <div onClick={() => followUser()} className='followBtn'><span>Follow</span></div>\r\n                        :\r\n                        <div onClick={() => unfollowUser()} className='followBtn'><span>Unfollow</span></div>\r\n                        :\r\n                        <div style={{margin: \"40px auto\"}}></div>\r\n                    }\r\n                    \r\n                    <div className=\"userDetails\">\r\n                        <h6>{profile.posts.length} Posts</h6>\r\n                        <h6>{profile.user.followers.length} Followers</h6>\r\n                        <h6>{profile.user.following.length} Following</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n                {\r\n                    profile.posts.map(post => {\r\n                        return(\r\n                            <img key={post._id} src={post.photo} alt={post.title}/> \r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\SignIn.js",[],["66","67"],"D:\\Web Application\\Instagram-clone\\server\\client\\src\\reportWebVitals.js",[],"D:\\Web Application\\Instagram-clone\\server\\client\\src\\index.js",[],"D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\Navbar.js",["68"],"D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\Profile.js",[],"D:\\Web Application\\Instagram-clone\\server\\client\\src\\reducers\\userReducer.js",[],["69","70"],"D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\CreatePost.js",["71"],"import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst CreatePost = () => {\r\n    const history = useHistory()\r\n    const [title, setTitle] = useState('')\r\n    const [caption, setCaption] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [url, setUrl] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(url){\r\n            fetch('/createpost', {\r\n                method: 'post',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body: caption,\r\n                    pic: url\r\n                })\r\n            }).then(res => res.json())\r\n            .then(data => {\r\n                if(data.error)\r\n                    M.toast({html: data.error, classes:\"#e53935 red darken-1\"})\r\n                else{\r\n                    M.toast({html: \"Post Created\", classes:\"#43a047 green darken-1\"})\r\n                    history.push('/')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    }, [url])\r\n\r\n    const postDetails = () => {\r\n        if(!image || !title || !caption)\r\n            return M.toast({html: \"Field Empty\", classes:\"#e53935 red darken-1\"})\r\n        const data = new FormData()\r\n\r\n        data.append('file', image)\r\n        data.append('upload_preset', 'insta-clone')\r\n        data.append('cloud_name', 'max12')\r\n        fetch('https://api.cloudinary.com/v1_1/max12/image/upload', {\r\n            method: 'post',\r\n            body: data\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"card input-field\">\r\n            <h2>Upload Post</h2>\r\n            <input \r\n            type='text' \r\n            placeholder='Title'\r\n            value={title}\r\n            onChange={e => setTitle(e.target.value)}\r\n            />\r\n            <input \r\n            type='text' \r\n            placeholder='Caption'\r\n            value={caption}\r\n            onChange={e => setCaption(e.target.value)}\r\n            />\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn\">\r\n                    <span>Choose Image</span>\r\n                    <input \r\n                    type=\"file\"\r\n                    onChange={e => setImage(e.target.files[0])}\r\n                    />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n            <button onClick={() => postDetails()} className='btn waves-effect waves-light #ff8a80 red accent-2'>Upload</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n","D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\Home.js",[],"D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\Reset.js",[],"D:\\Web Application\\Instagram-clone\\server\\client\\src\\components\\screens\\Newpassword.js",[],{"ruleId":"72","severity":1,"message":"73","line":30,"column":6,"nodeType":"74","endLine":30,"endColumn":8,"suggestions":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"72","severity":1,"message":"80","line":17,"column":8,"nodeType":"74","endLine":17,"endColumn":13,"suggestions":"81"},{"ruleId":"72","severity":1,"message":"82","line":21,"column":8,"nodeType":"74","endLine":21,"endColumn":10,"suggestions":"83"},{"ruleId":"76","replacedBy":"84"},{"ruleId":"78","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":56,"column":21,"nodeType":"88","endLine":56,"endColumn":90},{"ruleId":"76","replacedBy":"89"},{"ruleId":"78","replacedBy":"90"},{"ruleId":"72","severity":1,"message":"91","line":38,"column":8,"nodeType":"74","endLine":38,"endColumn":13,"suggestions":"92"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["93"],"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["96"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["97"],["94"],["95"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["94"],["95"],"React Hook useEffect has missing dependencies: 'caption', 'history', and 'title'. Either include them or remove the dependency array.",["98"],{"desc":"99","fix":"100"},"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [dispatch, history]",{"range":"107","text":"108"},"Update the dependencies array to be: [uploadFields, url]",{"range":"109","text":"110"},"Update the dependencies array to be: [userid]",{"range":"111","text":"112"},"Update the dependencies array to be: [caption, history, title, url]",{"range":"113","text":"114"},[1079,1081],"[dispatch, history]",[502,507],"[uploadFields, url]",[751,753],"[userid]",[1282,1287],"[caption, history, title, url]"]